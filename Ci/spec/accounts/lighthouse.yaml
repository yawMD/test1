## Lighouse for the mobile version of the accounts pages
mobile_lighthouse_accounts:
    stage: BuildAndTest
    allow_failure: true
    script:
        - chmod +x ./ci/scripts/checkhash.sh
        - export next_stage=`./ci/scripts/checkhash.sh mobile_lighthouse_accounts dashboard backend accounts`
        - if [[ $next_stage == *"skip"* ]]; then exit ${CI_JOB_SKIP_EXIT_CODE:-0}; fi
        - chmod +x ./ci/scripts/setup-docker.sh
        - ./ci/scripts/setup-docker.sh
        - echo "Setup machine for running lighthouse on accounts pages"
        - sudo docker stop $(sudo docker ps -aq) || echo 'No docker containers'
        - sudo docker rm $(sudo docker ps -aq) || echo 'No docker containers'
        - sudo docker run --name mongo -p 27017:27017 -d mongo:4.2.3
        - sudo docker run --name redis -p 6379:6379 -d redis:7.0.3 redis-server
        - sudo docker build -t oneuptime/backend:4.0.$CI_PIPELINE_ID ./backend
        - sudo docker run --env-file ./backend/.env -e IS_SAAS_SERVICE=true --net=host -d oneuptime/backend:4.0.$CI_PIPELINE_ID
        - sudo docker build -t oneuptime/accounts:4.0.$CI_PIPELINE_ID ./accounts
        - sudo docker run --env-file ./accounts/.env -e IS_SAAS_SERVICE=true -p 3003:3003 -d oneuptime/accounts:4.0.$CI_PIPELINE_ID
        - sudo docker build -t oneuptime/dashboard:4.0.$CI_PIPELINE_ID ./dashboard
        - sudo docker run --env-file ./dashboard/.env -e IS_SAAS_SERVICE=true -p 3000:3000 -d oneuptime/dashboard:4.0.$CI_PIPELINE_ID
        - sudo docker ps
        - npm install
        - cd accounts
        - npm install
        - export CHROME_PATH="$(pwd)/node_modules/puppeteer/.local-chromium/linux-818858/chrome-linux/chrome"
        # try building, if there are warnings then this will fail
        - npm run build
        - npm run light-house-mobile
        - cd ..
        - chmod +x ./ci/scripts/storehash.sh
        - ./ci/scripts/storehash.sh mobile_lighthouse_accounts dashboard backend accounts
        - chmod +x ./ci/scripts/cleanup.sh
        - ./ci/scripts/cleanup.sh
    except:
        refs:
            - hotfix-master
            - hotfix-release

desktop_lighthouse_accounts:
    stage: BuildAndTest
    allow_failure: true
    script:
        - chmod +x ./ci/scripts/checkhash.sh
        - export next_stage=`./ci/scripts/checkhash.sh desktop_lighthouse_accounts dashboard backend accounts`
        - if [[ $next_stage == *"skip"* ]]; then exit ${CI_JOB_SKIP_EXIT_CODE:-0}; fi
        - chmod +x ./ci/scripts/setup-docker.sh
        - ./ci/scripts/setup-docker.sh
        - echo "Setup machine for running lighthouse on accounts pages"
        - sudo docker stop $(sudo docker ps -aq) || echo 'No docker containers'
        - sudo docker rm $(sudo docker ps -aq) || echo 'No docker containers'
        - sudo docker run --name mongo -p 27017:27017 -d mongo:4.2.3
        - sudo docker run --name redis -p 6379:6379 -d redis:7.0.3 redis-server
        - sudo docker build -t oneuptime/backend:4.0.$CI_PIPELINE_ID ./backend
        - sudo docker run --env-file ./backend/.env -e IS_SAAS_SERVICE=true --net=host -d oneuptime/backend:4.0.$CI_PIPELINE_ID
        - sudo docker build -t oneuptime/accounts:4.0.$CI_PIPELINE_ID ./accounts
        - sudo docker run --env-file ./accounts/.env -e IS_SAAS_SERVICE=true -p 3003:3003 -d oneuptime/accounts:4.0.$CI_PIPELINE_ID
        - sudo docker build -t oneuptime/dashboard:4.0.$CI_PIPELINE_ID ./dashboard
        - sudo docker run --env-file ./dashboard/.env -e IS_SAAS_SERVICE=true -p 3000:3000 -d oneuptime/dashboard:4.0.$CI_PIPELINE_ID
        - sudo docker ps
        - npm install
        - cd accounts
        - npm install
        - export CHROME_PATH="$(pwd)/node_modules/puppeteer/.local-chromium/linux-818858/chrome-linux/chrome"
        # try building, if there are warnings then this will fail
        - npm run build
        - npm run light-house
        - cd ..
        - chmod +x ./ci/scripts/storehash.sh
        - ./ci/scripts/storehash.sh desktop_lighthouse_accounts dashboard backend accounts
        - chmod +x ./ci/scripts/cleanup.sh
        - ./ci/scripts/cleanup.sh
    except:
        refs:
            - hotfix-master
            - hotfix-release
